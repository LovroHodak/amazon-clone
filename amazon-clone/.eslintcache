[{"C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\App.js":"1","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Checkout.js":"2","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Product.js":"3","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\CheckoutProduct.js":"4","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Home.js":"5","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Login.js":"6","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Subtotal.js":"7","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\Reducer.js":"8","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Header.js":"9","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\index.js":"10","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\firebase.js":"11","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\StateProvider.js":"12","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Payment.js":"13","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\Axios.js":"14","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\axios.js":"15","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Orders.js":"16","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Order.js":"17"},{"size":1940,"mtime":1607080702361,"results":"18","hashOfConfig":"19"},{"size":1329,"mtime":1606921575747,"results":"20","hashOfConfig":"19"},{"size":1315,"mtime":1606920225399,"results":"21","hashOfConfig":"19"},{"size":1299,"mtime":1607101587605,"results":"22","hashOfConfig":"19"},{"size":3105,"mtime":1606480185356,"results":"23","hashOfConfig":"19"},{"size":2305,"mtime":1606908804762,"results":"24","hashOfConfig":"19"},{"size":1231,"mtime":1606926312957,"results":"25","hashOfConfig":"19"},{"size":1344,"mtime":1607080333754,"results":"26","hashOfConfig":"19"},{"size":2297,"mtime":1607102083229,"results":"27","hashOfConfig":"19"},{"size":488,"mtime":1606735865852,"results":"28","hashOfConfig":"19"},{"size":590,"mtime":1606905457223,"results":"29","hashOfConfig":"19"},{"size":497,"mtime":1606495405928,"results":"30","hashOfConfig":"19"},{"size":4959,"mtime":1607095331347,"results":"31","hashOfConfig":"19"},{"size":261,"mtime":1607104129833,"results":"32","hashOfConfig":"19"},{"size":149,"mtime":1607006472722,"results":"33","hashOfConfig":"19"},{"size":1099,"mtime":1607097163442,"results":"34","hashOfConfig":"19"},{"size":1073,"mtime":1607101768502,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"runa3g",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\App.js",["82","83"],"import React, { useEffect } from 'react'\nimport './App.css';\nimport Header from './components/Header'\nimport Home from './components/Home'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Checkout from './components/Checkout'\nimport Login from './components/Login'\nimport { auth } from './firebase'\nimport { useStateValue } from './StateProvider'\nimport Payment from './components/Payment'\nimport { loadStripe } from '@stripe/stripe-js'\nimport { Elements } from '@stripe/react-stripe-js'\nimport Orders from './components/Orders'\n\nconst promise = loadStripe(\n  'pk_test_51Hj18ZKqS56uvZe83wuhJjH6JFhxzj139IXZQAFhBT3NNzhJir4vntXcjEOha7Gw4JK6QQzD2Y2BEI4CFycD3LoW00GYaFr3so'\n)\n\n\n\nfunction App() {\n  const [{}, dispatch] = useStateValue()\n\n  useEffect(() => {\n    //only runs 1, when app component loads\n    auth.onAuthStateChanged(authUser => {\n      console.log('The user is: ', authUser)\n\n      if(authUser){\n        //user just logged in or the user was logged in\n        dispatch({\n          type: 'SET_USER',\n          user: authUser\n        })\n      } else {\n        //the user is logged out\n        dispatch({\n          type: 'SET_USER',\n          user: null\n        })\n      }\n    })\n  }, [])\n\n  return (\n    //BEM\n    <Router>\n      <div className=\"app\">\n        \n\n        <Switch>\n          <Route path='/orders' >\n            <Header />\n            <Orders />\n          </Route>\n\n          <Route path='/login' >\n            <Login />\n          </Route>\n\n          <Route path='/checkout' >\n            <Header />\n            <Checkout />\n          </Route>\n\n          <Route path='/payment' >\n            <Header />\n            <Elements stripe={promise} >\n              <Payment />\n            </Elements>\n          </Route>\n          \n          <Route path='/' >\n            <Header />\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n",["84","85"],"C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Checkout.js",["86"],"import React from 'react'\r\nimport './Checkout.css'\r\nimport Subtotal from './Subtotal'\r\nimport { useStateValue } from '../StateProvider'\r\nimport CheckoutProduct from './CheckoutProduct'\r\n\r\nfunction Checkout() {\r\n    const [{basket, user}, dispatch] = useStateValue()\r\n    return (\r\n        <div className='checkout' >\r\n            <div className='checkout__left' >\r\n                <img \r\n                    className='checkout__ad' \r\n                    alt='checkout-ad'\r\n                    src='https://i.imgur.com/8Wje1hr.jpg' \r\n                    />\r\n\r\n                    <div>\r\n                        <h3>{user?.email}</h3>\r\n                        <h2 className='checkout__title' >Your shopping Basket</h2>\r\n                        {basket.map(item => (\r\n                            <CheckoutProduct \r\n                                id={item.id}\r\n                                title={item.title}\r\n                                image={item.image}\r\n                                price={item.price}\r\n                                rating={item.rating}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n            </div>\r\n            <div className='checkout__right' >\r\n                <Subtotal />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n",["87","88"],"C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Product.js",["89"],"import React from 'react'\r\nimport { useStateValue } from '../StateProvider'\r\nimport './Product.css'\r\n\r\nfunction Product({ id, title, image, price, rating }) {\r\n    const [{basket}, dispatch ] = useStateValue()\r\n\r\n    //console.log('this is the basket >>> ', basket)\r\n\r\n    const addToBasket = () => {\r\n        dispatch({\r\n            type: 'ADD_TO_BASKET',\r\n            item: {\r\n                id: id,\r\n                title: title,\r\n                image: image,\r\n                price: price,\r\n                rating: rating\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='product' >\r\n            <div className='product__info' >\r\n                <p>{ title }</p>\r\n                <p className='product__price' >\r\n                    <small>$</small>\r\n                    <strong> { price } </strong>\r\n                </p>\r\n                <div className='product__rating' >\r\n                    {Array(rating)\r\n                        .fill()\r\n                        .map((_, i) => (\r\n                        <p>⭐</p>\r\n                    ))}\r\n                    \r\n                </div>\r\n            </div>\r\n            <img src={image} alt='product-foto' />\r\n            <button onClick={addToBasket} >Add To Basket</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n",["90","91"],"C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\CheckoutProduct.js",["92"],"C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Home.js",[],"C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Login.js",[],"C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Subtotal.js",["93"],"import React from 'react'\r\nimport './Subtotal.css'\r\nimport CurrencyFormat from 'react-currency-format'\r\nimport { useStateValue } from '../StateProvider'\r\nimport { getBasketTotal } from '../Reducer'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction Subtotal() {\r\n    const history = useHistory()\r\n    const [{basket}, dispatch] = useStateValue()\r\n    return (\r\n        <div className='subtotal' >\r\n            <CurrencyFormat\r\n                renderText={(value) => (\r\n                    <>\r\n                        <p>\r\n                            Subtotal ({basket.length} items): <strong>{value}</strong>\r\n                        </p>\r\n                        <small className='subtotal__gift' >\r\n                            <input type='checkbox' />This order contains a gift\r\n                        </small>\r\n                    </>\r\n                )}\r\n                decimalScale={2}\r\n                value={getBasketTotal(basket)}\r\n                displayType={'text'}\r\n                thousandSeparator={true}\r\n                prefix={'$'}\r\n                />\r\n\r\n                <button onClick={e => history.push('/payment')} >Proceed to Checkout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subtotal\r\n",["94","95"],"C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\Reducer.js",[],"C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Header.js",["96"],"import React from 'react'\r\nimport './Header.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport { Link } from 'react-router-dom';\r\nimport { useStateValue } from '../StateProvider'\r\nimport { auth } from '../firebase'\r\n\r\nfunction Header() {\r\n    const [{basket, user }, dispatch] = useStateValue()\r\n\r\n    const handleAuthentication = () => {\r\n        if(user) {\r\n            auth.signOut()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='header' >\r\n            <Link to='/'>\r\n                <img className='header__logo' src=\"http://pngimg.com/uploads/amazon/amazon_PNG11.png\" alt='amazon-logo' />\r\n            </Link>\r\n            <div className='header__search' >\r\n                <input className='header__searchInput' type='text' />\r\n                <SearchIcon className='header__searchIcon' />\r\n            </div>\r\n            <div className='header__nav' >\r\n                <Link to={!user && '/login'}>\r\n                    <div onClick={handleAuthentication} className='header__option' >\r\n                        <span className='header__optionLineOne' >Hello {!user ? 'Guest' : user.email }</span>\r\n                        <span className='header__optionLineTwo' >{user ? 'Sign Out' : 'Sign In'}</span>\r\n                    </div>\r\n                </Link>\r\n\r\n                <Link to='/orders'>\r\n                    <div className='header__option' >\r\n                        <span className='header__optionLineOne' >Returns</span>\r\n                        <span className='header__optionLineTwo' >& Orders</span>\r\n                    </div>\r\n                </Link>\r\n\r\n                <div className='header__option' >\r\n                    <span className='header__optionLineOne' >Your</span>\r\n                    <span className='header__optionLineTwo' >Prime</span>\r\n                </div>\r\n                \r\n                <Link to='/checkout' >\r\n                    <div className='header__optionBasket'>\r\n                        <ShoppingBasketIcon />\r\n                        <span className='header__optionLineTwo header__basketCount' >{basket?.length} </span>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\index.js",[],"C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\firebase.js",[],"C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\StateProvider.js",[],["97","98"],"C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Payment.js",["99"],"import React, { useState, useEffect } from \"react\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport \"./Payment.css\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getBasketTotal } from \"../Reducer\";\r\nimport axios from \"../Axios\";\r\nimport { db } from \"../firebase\";\r\n\r\nfunction Payment() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [processing, setProcessing] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(true);\r\n\r\n  useEffect(() => {\r\n    //generate special stripe secret that allows us to charge client\r\n\r\n    const getClientSecret = async () => {\r\n      const response = await axios({\r\n        method: \"post\",\r\n        //stripe expects the total in currencies subunits (if you use Dollars it converts to Cents)\r\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`,\r\n      });\r\n      setClientSecret(response.data.clientSecret);\r\n    };\r\n\r\n    getClientSecret();\r\n  }, [basket]);\r\n\r\n  console.log(\"the secret is >>>\", clientSecret);\r\n\r\n  const handleSubmit = async (event) => {\r\n    //fancy stripe functionality here\r\n    event.preventDefault();\r\n    setProcessing(true);\r\n\r\n    const payload = await stripe\r\n      .confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      })\r\n      .then(({ paymentIntent }) => {\r\n        //payment intent = payment conformation\r\n\r\n        db.collection(\"users\")\r\n          .doc(user?.uid)\r\n          .collection(\"orders\")\r\n          .doc(paymentIntent.id)\r\n          .set({\r\n            basket: basket,\r\n            amount: paymentIntent.amount,\r\n            created: paymentIntent.created,\r\n          });\r\n\r\n        setSucceeded(true);\r\n        setError(null);\r\n        setProcessing(false);\r\n\r\n        dispatch({\r\n          type: \"EMPTY_BASKET\",\r\n        });\r\n\r\n        history.replace(\"/orders\");\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    //listen for changes in CardElements\r\n    //display errors of card details\r\n    setDisabled(event.empty);\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment\">\r\n      <div className=\"payment__container\">\r\n        <h1>\r\n          Checkout (<Link to=\"/checkout\">{basket?.length} items</Link>)\r\n        </h1>\r\n        {/* Payment Section - delivery adress */}\r\n        <div className=\"payment__section\">\r\n          <div className=\"payment__title\">\r\n            <h3>Delivery Address</h3>\r\n          </div>\r\n          <div className=\"payment__address\">\r\n            <p>{user?.email}</p>\r\n            <p>123 React Lane</p>\r\n            <p>Los Angeles, CA</p>\r\n          </div>\r\n        </div>\r\n        {/* Payment Section - rewiew items */}\r\n        <div className=\"payment__section\">\r\n          <div className=\"payment__title\">\r\n            <h3>Review items and delivery</h3>\r\n          </div>\r\n          <div className=\"payment__items\">\r\n            {basket.map((item) => (\r\n              <CheckoutProduct\r\n                id={item.id}\r\n                title={item.title}\r\n                image={item.image}\r\n                price={item.price}\r\n                rating={item.rating}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {/* Payment Section - payment method */}\r\n        <div className=\"payment__section\">\r\n          <div className=\"payment__title\">\r\n            <h3>Payment Method</h3>\r\n          </div>\r\n          <div className=\"payment__details\">\r\n            {/* STRIPE MAGIC GOES HERE */}\r\n            <form onSubmit={handleSubmit}>\r\n              <CardElement onChange={handleChange} />\r\n\r\n              <div className=\"payment__priceContainer\">\r\n                <CurrencyFormat\r\n                  renderText={(value) => (\r\n                    <>\r\n                      <h3>Order Total: {value}</h3>\r\n                    </>\r\n                  )}\r\n                  decimalScale={2}\r\n                  value={getBasketTotal(basket)}\r\n                  displayType={\"text\"}\r\n                  thousandSeparator={true}\r\n                  prefix={\"$\"}\r\n                />\r\n                <button disabled={processing || disabled || succeeded}>\r\n                  <span>{processing ? <p>Processing</p> : \"Buy Now\"} </span>\r\n                </button>\r\n              </div>\r\n              {/* Errors */}\r\n              {error && <div>{error} </div>}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payment;\r\n","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\Axios.js",[],"C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\axios.js",[],"C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Orders.js",["100"],"import React, { useState, useEffect } from 'react'\r\nimport { db } from '../firebase'\r\nimport './Orders.css'\r\nimport { useStateValue } from '../StateProvider'\r\ninport Order from './Order'\r\n\r\nfunction Orders() {\r\n\r\n    const [ {basket, user }, dispatch ] = useStateValue()\r\n    const [orders, setOrders] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(user){\r\n            db.collection('users')\r\n              .doc(user?.uid)\r\n              .collection('orders')\r\n              .orderBy('created', 'desc')\r\n              .onSnapshot(snapshot => (\r\n                setOrders(snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                })))\r\n            ))\r\n        } else {\r\n            setOrders([])\r\n        }\r\n\r\n\r\n    }, [user])\r\n\r\n    return (\r\n        <div className='orders' >\r\n            <h1>Your Orders</h1>\r\n            <div className='orders__order' >\r\n                {orders?.map(order => (\r\n                    <Order order={order} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n","C:\\Users\\Lovro\\Desktop\\labs\\PRACTICE\\amazon-clone\\amazon-clone\\src\\components\\Order.js",[],{"ruleId":"101","severity":1,"message":"102","line":22,"column":10,"nodeType":"103","messageId":"104","endLine":22,"endColumn":12},{"ruleId":"105","severity":1,"message":"106","line":43,"column":6,"nodeType":"107","endLine":43,"endColumn":8,"suggestions":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":8,"column":28,"nodeType":"115","messageId":"116","endLine":8,"endColumn":36},{"ruleId":"109","replacedBy":"117"},{"ruleId":"111","replacedBy":"118"},{"ruleId":"113","severity":1,"message":"119","line":6,"column":13,"nodeType":"115","messageId":"116","endLine":6,"endColumn":19},{"ruleId":"109","replacedBy":"120"},{"ruleId":"111","replacedBy":"121"},{"ruleId":"113","severity":1,"message":"119","line":6,"column":13,"nodeType":"115","messageId":"116","endLine":6,"endColumn":19},{"ruleId":"113","severity":1,"message":"114","line":10,"column":22,"nodeType":"115","messageId":"116","endLine":10,"endColumn":30},{"ruleId":"109","replacedBy":"122"},{"ruleId":"111","replacedBy":"123"},{"ruleId":"113","severity":1,"message":"114","line":10,"column":29,"nodeType":"115","messageId":"116","endLine":10,"endColumn":37},{"ruleId":"109","replacedBy":"124"},{"ruleId":"111","replacedBy":"125"},{"ruleId":"113","severity":1,"message":"126","line":47,"column":11,"nodeType":"115","messageId":"116","endLine":47,"endColumn":18},{"ruleId":null,"fatal":true,"severity":2,"message":"127","line":5,"column":8},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["128"],"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar",["129"],["130"],"'basket' is assigned a value but never used.",["129"],["130"],["129"],["130"],["129"],["130"],"'payload' is assigned a value but never used.","Parsing error: Unexpected token, expected \";\"\n\n  3 | import './Orders.css'\n  4 | import { useStateValue } from '../StateProvider'\n> 5 | inport Order from './Order'\n    |        ^\n  6 | \n  7 | function Orders() {\n  8 |",{"desc":"131","fix":"132"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"133","text":"134"},[1224,1226],"[dispatch]"]